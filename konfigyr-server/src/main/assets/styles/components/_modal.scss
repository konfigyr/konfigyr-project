@use "sass:map";

/**
 * Modal (<dialog>)
 */

:root {
  --konfigyr-scrollbar-width: 0px;
}

dialog {
  display: flex;
  z-index: 999;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  align-items: center;
  justify-content: center;
  width: inherit;
  min-width: 100%;
  height: inherit;
  min-height: 100%;
  padding: 0;
  border: 0;
  backdrop-filter: var(--konfigyr-modal-overlay-backdrop-filter);
  background-color: var(--konfigyr-modal-overlay-background-color);
  color: var(--konfigyr-color);

  // Content
  article {
    width: 100%;
    max-height: calc(100vh - var(--konfigyr-spacing) * 2);
    margin: var(--konfigyr-spacing);
    overflow: auto;

    @if map.get($breakpoints, "sm") {
      @media (min-width: map.get(map.get($breakpoints, "sm"), "breakpoint")) {
        max-width: map.get(map.get($breakpoints, "sm"), "viewport");
      }
    }

    @if map.get($breakpoints, "md") {
      @media (min-width: map.get(map.get($breakpoints, "md"), "breakpoint")) {
        max-width: map.get(map.get($breakpoints, "md"), "viewport");
      }
    }

    > header {
      > * {
        margin-bottom: 0;
      }

      .close,
      :is(a, button)[rel=prev] {
        margin: 0;
        margin-left: var(--konfigyr-spacing);
        padding: 0;
        float: right;
      }
    }

    > footer {
      text-align: right;

      button,
      [role="button"] {
        margin-bottom: 0;

        &:not(:first-of-type) {
          margin-left: calc(var(--konfigyr-spacing) * 0.5);
        }
      }
    }

    // Close icon
    .close, :is(a, button)[rel=prev] {
      display: block;
      width: 1rem;
      height: 1rem;
      margin-top: calc(var(--konfigyr-spacing) * -1);
      margin-bottom: var(--konfigyr-spacing);
      margin-left: auto;
      border: none;
      transition: opacity var(--konfigyr-transition);
      background-image: var(--konfigyr-icon-close);
      background-position: center;
      background-size: auto 1rem;
      background-repeat: no-repeat;
      background-color: transparent;
      opacity: 0.5;

      &:is([aria-current]:not([aria-current="false"]), :hover, :active, :focus) {
        opacity: 1;
      }
    }
  }

  // Closed state
  &:not([open]),
  &[open="false"] {
    display: none;
  }
}

// Utilities
.modal-is-open {
  padding-right: var(--konfigyr-scrollbar-width, 0px);
  overflow: hidden;
  pointer-events: none;
  touch-action: none;

  dialog {
    pointer-events: auto;
    touch-action: auto;
  }
}

// Animations
:where(.modal-is-opening) {
  dialog,
  dialog article {
    animation-duration: 0.2s;
    animation-timing-function: cubic-bezier(0.33, 1, 0.68, 1);
    animation-fill-mode: both;
  }

  dialog {
    animation-name: modal-overlay;

    article {
      animation-name: modal;
    }
  }
}

@keyframes modal-overlay {
  from {
    backdrop-filter: none;
    background-color: transparent;
  }
}

@keyframes modal {
  0% {
    opacity: 0;
    transform: scale(0.5);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}
