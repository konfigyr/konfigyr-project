/**
 * Nav
 */

// Reboot based on :
// - sanitize.css v13.0.0 | CC0 1.0 Universal | github.com/csstools/sanitize.css

// Prevent VoiceOver from ignoring list semantics in Safari (opinionated)
:where(nav li)::before {
  float: left;
  content: "\200B";
}

nav,
nav ul {
  display: flex;
}

nav {
  justify-content: space-between;
  overflow: visible;

  ol,
  ul {
    align-items: center;
    margin-bottom: 0;
    padding: 0;
    list-style: none;

    &:first-of-type {
      margin-left: calc(var(--konfigyr-nav-element-spacing-horizontal) * -1);
    }
    &:last-of-type {
      margin-right: calc(var(--konfigyr-nav-element-spacing-horizontal) * -1);
    }
  }

  li {
    display: inline-block;
    margin: 0;
    padding: var(--konfigyr-nav-element-spacing-vertical)
      var(--konfigyr-nav-element-spacing-horizontal);

    :where(a, [role="link"]) {
      display: inline-block;
      margin: calc(var(--konfigyr-nav-link-spacing-vertical) * -0.5)
        calc(var(--konfigyr-nav-link-spacing-horizontal) * -0.5);
      padding: var(--konfigyr-nav-link-spacing-vertical)
        var(--konfigyr-nav-link-spacing-horizontal);
      border-radius: var(--konfigyr-border-radius);
      color: var(--konfigyr-nav-link-color);
      background-color: var(--konfigyr-nav-link-background-color);
      text-decoration: var(--konfigyr-nav-link-text-decoration);

      &.active {
        color: var(--konfigyr-nav-link-color-active);
        background-color: var(--konfigyr-nav-link-background-color-active);
      }

      &:hover {
        color: var(--konfigyr-nav-link-color-hover);
        background-color: var(--konfigyr-nav-link-background-color-hover);
      }

      &:not(:hover) {
        text-decoration: none;
      }
    }

    // Minimal support for buttons and forms elements
    button,
    [role="button"],
    [type="button"],
    input:not([type="checkbox"], [type="radio"], [type="range"], [type="file"]),
    select {
      height: auto;
      margin-right: inherit;
      margin-bottom: 0;
      margin-left: inherit;
      padding: calc(
          var(--konfigyr-nav-link-spacing-vertical) -
            (var(--konfigyr-border-width) * 2)
        )
        var(--konfigyr-nav-link-spacing-horizontal);
    }
  }

  // Breadcrumb
  &[aria-label="breadcrumb"] {
    align-items: center;
    justify-content: start;

    & ul li {
      &:not(:first-child) {
        margin-inline-start: var(--konfigyr-nav-link-spacing-horizontal);
      }

      a {
        margin: calc(var(--konfigyr-nav-link-spacing-vertical) * -1) 0;
        margin-inline-start: calc(var(--konfigyr-nav-link-spacing-horizontal) * -1);
      }

      &:not(:last-child) {
        &::after {
          display: inline-block;
          position: absolute;
          width: calc(var(--konfigyr-nav-link-spacing-horizontal) * 4);
          margin: 0 calc(var(--konfigyr-nav-link-spacing-horizontal) * -1);
          content: var(--konfigyr-nav-breadcrumb-divider);
          color: var(--konfigyr-muted-color);
          text-align: center;
          text-decoration: none;
          white-space: nowrap;
        }
      }
    }

    // Minimal support for aria-current
    & a[aria-current]:not([aria-current="false"]) {
      background-color: transparent;
      color: inherit;
      text-decoration: none;
      pointer-events: none;
    }
  }
}

// Vertical Nav
aside {
  nav,
  ol,
  ul,
  li {
    display: block;
  }

  li {
    padding: calc(var(--konfigyr-nav-element-spacing-vertical) * 0.5)
      var(--konfigyr-nav-element-spacing-horizontal);

    a {
      display: block;
      text-decoration: none;
    }

    a:hover {
      background-color: darken(#FFF, 7.5);
    }

    // Minimal support for links as buttons
    [role="button"] {
      margin: inherit;
    }
  }
}

// Breadcrumb RTL
[dir="rtl"] {
  nav {
    &[aria-label="breadcrumb"] {
      & ul li {
        &:not(:last-child) {
          ::after {
            content: "\\";
          }
        }
      }
    }
  }
}
