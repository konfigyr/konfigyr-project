plugins {
    id 'io.freefair.lombok' version '8.14' apply false
    id 'org.springframework.boot' version '3.5.3' apply false
    id 'io.spring.dependency-management' version '1.1.7' apply false
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'
    apply plugin: 'project-report'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        mavenLocal()
    }

    group = 'com.konfigyr'
    version = '1.0.0'

    dependencies {
        annotationProcessor 'org.springframework.boot:spring-boot-autoconfigure-processor'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        implementation 'com.github.spotbugs:spotbugs-annotations:4.9.3'

        checkstyle 'io.spring.javaformat:spring-javaformat-checkstyle:0.0.47'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${findProperty('versions.spring.boot')}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${findProperty('versions.spring.cloud')}"
            mavenBom "org.springframework.modulith:spring-modulith-bom:${findProperty('versions.spring.modulith')}"
            mavenBom "org.jmolecules:jmolecules-bom:${findProperty('versions.spring.jmolecules')}"
        }

        dependencies {
            /* Konfigyr Libraries */
            dependency('com.konfigyr:konfigyr-artifactory:1.0.0-RC1')
            dependency('com.konfigyr:konfigyr-mail-api:1.0.0-RC1')
            dependency('com.konfigyr:konfigyr-mail-smtp:1.0.0-RC1')
            dependency('com.konfigyr:konfigyr-mail-thymeleaf:1.0.0-RC1')
            dependency('com.konfigyr:konfigyr-crypto-api:1.0.0-RC2')
            dependency('com.konfigyr:konfigyr-crypto-tink:1.0.0-RC2')
            dependency('com.konfigyr:konfigyr-crypto-jdbc:1.0.0-RC2')

            /* Bouncy Castle provider */
            dependency('org.bouncycastle:bcprov-jdk18on:1.80')

            /* Thymeleaf layout dialect */
            dependency('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.4.0')

            /* Fix Dependabot alerts */
            dependency('org.apache.commons:commons-compress:1.27.1') // used by testcontainers
            dependency('com.google.guava:guava:33.4.8-jre') // used by checkstyle

            /* JSoup HTML test support */
            dependency('org.jsoup:jsoup:1.21.1')
            dependency('com.icegreen:greenmail:2.1.3')

            /* Wiremock Spring Boot integration */
            dependency('org.wiremock.integrations:wiremock-spring-boot:3.10.0')
        }
    }

    java {
        withJavadocJar()
        withSourcesJar()

        toolchain {
            languageVersion = JavaLanguageVersion.of(24)
        }
    }

    test {
        useJUnitPlatform()
    }

    jacocoTestReport {
        reports {
            xml.required = true
            html.required = false
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.compilerArgs.add('-parameters')
    }

    tasks.withType(Javadoc).configureEach {
        options.addStringOption('Xdoclint:-missing', '-quiet')
    }

    check.dependsOn jacocoTestReport
}
